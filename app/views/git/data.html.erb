

<style>



#chart {
  height: 500px;
}

.node rect {
  cursor: move;
  fill-opacity: .9;
  shape-rendering: crispEdges;
}

.node text {
  pointer-events: none;
  color: #FFFFFF;
}

.link {
  fill: none;
  stroke: #000;
  stroke-opacity: .2;
}

.link:hover {
  stroke-opacity: .5;
}


</style>


<div id="chart">
</div>







<script>
var margin = {top: 1, right: 1, bottom: 6, left: 1},
    width = 5000 - margin.left - margin.right,
    height = 1200 - margin.top - margin.bottom;

var formatNumber = d3.format(",.0f"),
    format = function(d) { return formatNumber(d) + " TWh"; },
    color = d3.scale.category20();

var svg = d3.select("#chart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var sankey = d3.sankey()
    .nodeWidth(400)
    .nodePadding(2)
    .size([width, height]);

var path = sankey.link();


d3.json('http://localhost:3000/rawdata.json', function (energy) {
  console.log(energy);

  sankey
      .nodes(energy.nodes)
      .links(energy.links)
      .layout(0);

  var link = svg.append("g").selectAll(".link")
      .data(energy.links)
    .enter().append("path")
      .attr("class", "link")
      .attr("d", path)
      .style("stroke-width", function(d) { return Math.max(1, d.dy); })
      .sort(function(a, b) { return b.dy - a.dy; });

  link.append("title")
      .text(function(d) { return d.source.name + " â†’ " + d.target.name + "\n" + format(d.value); });

  var node = svg.append("g").selectAll(".node")
      .data(energy.nodes.sort(
		function(a,b) { 
			return a.name < b.name;
		})
		)
    .enter().append("g")
      .attr("class", "node")
      .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; })
    .call(d3.behavior.drag()
      .origin(function(d) { return d; })
      .on("dragstart", function() { this.parentNode.appendChild(this); })
      .on("drag", dragmove));

  node.append("rect")
      .attr("height", function(d) { return d.dy; })
      .attr("width", sankey.nodeWidth())
      .style("fill", function(d) { return d.color = color(d.commit); })
      .style("stroke", function(d) { return d3.rgb(d.color).darker(2); })
    .append("title")
      .text(function(d) { return d.author; });

  node.append("text")
      .attr("y", function(d) { return 10 ; })
      .attr("dy", ".35em")
      .style("font-size", "5px")
      .attr("transform", null)
      .text(function(d) { return d.content; })
      .attr("x", 6 )
      .attr("text-anchor", "start");

  node.selectAll("text")
      .call(wrap, sankey.nodeWidth());

  function dragmove(d) {
    d3.select(this).attr("transform", "translate(" + d.x + "," + (d.y = Math.max(0, Math.min(height - d.dy, d3.event.y))) + ")");
    sankey.relayout();
    link.attr("d", path);
  }
});


function wrap(text, width) {
  text.each(function() {
    var text = d3.select(this),
        lines = text.text().split(/\n/),
        line,
        lineHeight = 0.55, // em
        y = text.attr("y"),
        dy = parseFloat(text.attr("dy"));
        text.text(null);
    lines.forEach (function(line, lineNumber){
      tab = line.match(/\t/g) ;
      text.append("tspan").attr("x", 0).attr("y", y).attr("dy", lineNumber * lineHeight + dy + "em").attr("text-indent", tab).text(line);
      });
    });
}
// http://bl.ocks.org/mbostock/7555321
</script>
